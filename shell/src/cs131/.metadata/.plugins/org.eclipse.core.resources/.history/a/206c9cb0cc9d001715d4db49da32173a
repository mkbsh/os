package cs131.pa1.filter.sequential;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;

import cs131.pa1.filter.Message;

public class Redirect extends SequentialFilter {
	private final String command;
	public Redirect(String command) {
		this.command = command.trim();
	}
	
	@Override
	public void process() {
		String[] tokenized = command.split(" ");
		System.out.println(SequentialREPL.currentWorkingDirectory);
		System.out.println(Arrays.toString(input.toArray()));
		if (tokenized.length != 2) {
			System.out.print(Message.REQUIRES_PARAMETER.with_parameter(command));
			return;
		}
		BufferedWriter writer = null;
		try {
			writer = new BufferedWriter(new FileWriter (tokenized[1]));
			for (String s : input) writer.write(s + "\n");
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				writer.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}

	@Override
	protected String processLine(String line) {
		
		
		return null;
	}

}
