package cs131.pa1.filter.sequential;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Logger;
import java.util.stream.Stream;

import cs131.pa1.filter.Message;

public class Cd extends SequentialFilter {
	private final String command;	
	
	public Cd(String command) {
		this.command = command.trim();
	}
	
	public String getCommand() {
		return command;
	}
	
	@Override
	public void process() {
		String[] tokenized = command.split(" ");
		String new_dir = SequentialREPL.currentWorkingDirectory;
		if (tokenized.length == 1) {
			System.out.print(Message.REQUIRES_PARAMETER.with_parameter(command));
			return;
		} else if (tokenized.length == 2) {
			if (tokenized[1].equals("..")) {
				int last_slash = SequentialREPL.currentWorkingDirectory.lastIndexOf(SequentialFilter.FILE_SEPARATOR);
				new_dir = SequentialREPL.currentWorkingDirectory.substring(0, last_slash);
			} else if (!tokenized[1].equals(".")) {
				new_dir = SequentialREPL.currentWorkingDirectory + SequentialFilter.FILE_SEPARATOR + tokenized[1];
				File file = new File(new_dir);
				if (!file.isDirectory()) {
					System.out.print(Message.DIRECTORY_NOT_FOUND.with_parameter(command));
					return;
				}
			}
		} else {
			System.out.println(Message.DIRECTORY_NOT_FOUND.with_parameter(command));
			return;
		}
					
		SequentialREPL.currentWorkingDirectory = new_dir;
		
	}

	@Override
	protected String processLine(String line) {
		// TODO Auto-generated method stub
		return null;
	}
	
}
